{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","data","message","addContact","newContact","contact","name","number","post","then","catch","error","deleteContact","contactId","delete","getFilter","state","contacts","filter","contactsSelectors","getLoading","loading","getContacts","getFilteredContacts","createSelector","items","normalizedFilter","toLowerCase","includes","createReducer","_","payload","id","combineReducers","authActions","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","__","token","setError","isAuthenticated","headers","common","Authorization","authOperations","register","credentials","response","logIn","logOut","getCurrentUser","getUser","persistedToken","auth","authSelectors","getIsAuthenticated","getUsername","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDispatchToProps","onLogout","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Container","children","className","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","PhonebookView","App","this","onGetCurrentUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2199c1a4.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = newContact => dispatch => {\r\n  const contact = {\r\n    name: newContact.name,\r\n    number: newContact.number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default contactsOperations;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nconst contactsSelectors = {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n\r\nexport default contactsSelectors;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({ items, filter, loading, error });\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default authActions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: (_, __) => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: (_, __) => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({ user, isAuthenticated, token, error });\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getUser) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getUser();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst authOperations = { register, logIn, logOut, getCurrentUser };\r\n\r\nexport default authOperations;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n\r\nexport default authSelectors;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    {isAuthenticated ? (\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        exact\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Телефонная книга\r\n      </NavLink>\r\n    ) : (\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div style={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n    <span style={styles.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Выйти\r\n    </button>\r\n  </div>\r\n);\r\nconst mapStateToProps = state => ({\r\n  name: authSelectors.getUsername(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header style={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\nimport Container from './components/Container';\r\nimport { authOperations } from './redux/auth';\r\nimport { connect } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst PhonebookView = lazy(() => import('./views/PhonebookView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n\r\n        <Suspense fallback={<p>Загружаем...</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={RegisterView}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n              component={LoginView}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={PhonebookView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './contacts';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}